<?php

/**
 * BaseProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property decimal $price
 * @property text $description
 * @property string $image
 * @property Cart $Cart
 * 
 * @method integer getId()          Returns the current record's "id" value
 * @method string  getName()        Returns the current record's "name" value
 * @method decimal getPrice()       Returns the current record's "price" value
 * @method text    getDescription() Returns the current record's "description" value
 * @method string  getImage()       Returns the current record's "image" value
 * @method Cart    getCart()        Returns the current record's "Cart" value
 * @method Product setId()          Sets the current record's "id" value
 * @method Product setName()        Sets the current record's "name" value
 * @method Product setPrice()       Sets the current record's "price" value
 * @method Product setDescription() Sets the current record's "description" value
 * @method Product setImage()       Sets the current record's "image" value
 * @method Product setCart()        Sets the current record's "Cart" value
 * 
 * @package    ecsite
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProduct extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('price', 'decimal', null, array(
             'type' => 'decimal',
             'scale' => 2,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cart', array(
             'local' => 'id',
             'foreign' => 'product_id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}